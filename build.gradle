group 'me.duelsol'
version '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'maven'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    mysql_driver = 'mysql:mysql-connector-java:5.1.37'
    jackson_version = '2.8.7'
    log4j_version = '2.8.2'
    springframework_version = '4.3.7.RELEASE'
}

dependencies {
    compile (
            "org.apache.ant:ant-antlr:1.9.7",
            "aopalliance:aopalliance:1.0",
            "org.aspectj:aspectjweaver:1.8.2",
            "taglibs:standard:1.1.2",
            "com.fasterxml.jackson.core:jackson-core:$jackson_version",
            "com.fasterxml.jackson.core:jackson-databind:$jackson_version",
            "net.sf.json-lib:json-lib:2.4:jdk15",
            "com.google.guava:guava:18.0",
            "com.google.code.gson:gson:2.8.1",
            "com.squareup.okhttp3:okhttp:3.8.1",
            "com.rabbitmq:amqp-client:4.1.0",
            "io.jsonwebtoken:jjwt:0.7.0",
            "org.apache.shiro:shiro-spring:1.4.0",

            "javax.servlet:jstl:1.2",
            "javax.servlet.jsp:jsp-api:2.1",
            "javax.servlet:servlet-api:2.5",

            "org.slf4j:slf4j-api:1.7.25",
            "org.apache.logging.log4j:log4j-core:$log4j_version",
            "org.apache.logging.log4j:log4j-api:$log4j_version",
            "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version",

            "org.apache.commons:commons-collections4:4.1",
            "org.apache.commons:commons-dbcp2:2.1.1",
            "org.apache.commons:commons-jexl:2.1.1",
            "org.apache.commons:commons-lang3:3.3.2",
            "org.apache.commons:commons-pool2:2.4.2",
            "org.apache.commons:commons-text:1.6",
            "org.apache.httpcomponents:httpclient:4.5.3",
            "commons-io:commons-io:2.5",
            "commons-beanutils:commons-beanutils:1.9.2",
            "commons-logging:commons-logging:1.2",

            "com.alibaba:druid:1.1.6",
            "$mysql_driver",
            "redis.clients:jedis:2.9.0",
            "org.redisson:redisson:3.5.6",
            "org.springframework.data:spring-data-redis:1.8.3.RELEASE",
            "org.mybatis:mybatis:3.4.6",
            "org.mybatis:mybatis-spring:1.3.2",

            "org.springframework:spring-aop:$springframework_version",
            "org.springframework:spring-beans:$springframework_version",
            "org.springframework:spring-context:$springframework_version",
            "org.springframework:spring-core:$springframework_version",
            "org.springframework:spring-expression:$springframework_version",
            "org.springframework:spring-jdbc:$springframework_version",
            "org.springframework:spring-orm:$springframework_version",
            "org.springframework:spring-test:$springframework_version",
            "org.springframework:spring-tx:$springframework_version",
            "org.springframework:spring-web:$springframework_version",
            "org.springframework:spring-webmvc:$springframework_version",
            "org.springframework:spring-websocket:$springframework_version"
    )
    compile fileTree(dir: 'lib', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

// ************************** MyBatis Generator plugin ***************************

configurations {
    mybatisGenerator
}

dependencies {
    mybatisGenerator "$mysql_driver"
    mybatisGenerator "org.slf4j:slf4j-nop:1.7.25"
    mybatisGenerator "org.mybatis.generator:mybatis-generator-core:1.3.7"
    mybatisGenerator "com.itfsw:mybatis-generator-plugin:1.2.9"
}

def applicationProperties = {
    def properties = new Properties()
    file('src/main/resources/config/application.properties').withInputStream { inputStream ->
        properties.load(inputStream)
    }
    properties
}

task mbGenerator << {
    def generatorPath = configurations.mybatisGenerator.asPath
    def srcPath = sourceSets.main.java.srcDirs[0].toString()
    def properties = applicationProperties()
    exec {
        workingDir srcPath
        commandLine 'javac', 'me/duelsol/springmvcseed/model/BaseModel.java'
    }
    exec {
        workingDir srcPath
        commandLine 'jar', 'cvf', 'BaseModel.jar', 'me/duelsol/springmvcseed/model/BaseModel.class'
    }
    ant.properties['mysql.driverClass'] = properties.getProperty('mysql.driverClass')
    ant.properties['mysql.url'] = properties.getProperty('mysql.url')
    ant.properties['mysql.username'] = properties.getProperty('mysql.username')
    ant.properties['mysql.password'] = properties.getProperty('mysql.password')
    ant.taskdef(
            name: 'mbGenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: generatorPath + ':' + srcPath + '/BaseModel.jar'
    )
    ant.mbGenerator(
            overwrite: true,
            verbose: true,
            configfile: 'src/main/resources/config/generatorConfig.xml') {
        propertyset {
            propertyref(name: 'mysql.driverClass')
            propertyref(name: 'mysql.url')
            propertyref(name: 'mysql.username')
            propertyref(name: 'mysql.password')
        }
    }
    exec {
        workingDir srcPath
        commandLine 'rm', '-rf', 'me/duelsol/springmvcseed/model/BaseModel.class'
    }
    exec {
        workingDir srcPath
        commandLine 'rm', '-rf', 'BaseModel.jar'
    }
}

// *******************************************************************************
